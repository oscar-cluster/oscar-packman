#!/usr/bin/env perl 
#
# Copyright (c) 2007-2008 Oak Ridge National Laboratory
#                         Geoffroy Vallee <valleegr@ornl.gov>
#                         All rights reserved
#
# This file is part of the OSCAR software package.  For license
# information, see the COPYING file in the top level directory of the
# OSCAR source distribution.
#
# $Id$
#

BEGIN {
    if (defined $ENV{OSCAR_HOME}) {
        unshift @INC, "$ENV{OSCAR_HOME}/lib";
    }
}

use strict;
use warnings "all";
use Carp;
use OSCAR::PackageSmart;
use Getopt::Long;
use Data::Dumper;

my ($prepare_repo, $root, $distro);
my $verbose = 1;

Getopt::Long::Configure("pass_through");
GetOptions(
        "prepare-repo=s"                => \$prepare_repo,
        "root=s"                        => \$root,
        "verbose"                       => \$verbose,
        "v"                             => \$verbose,
        "help"                          => \&help_and_exit,
        ) || help_and_die();

if ($prepare_repo && defined $ARGV[0]) {
    die "ERROR: it seems you try to do multiple actions at the same time, ".
        "this is not allowed.";
}

if ($prepare_repo) {
    print "Preparing repository $prepare_repo\n" if $verbose;
    my $pm = OSCAR::PackageSmart::prepare_pool ($verbose, $prepare_repo);
    if (!defined $pm) {
        die "ERROR: Impossible to prepare the repository $prepare_repo";
    } else {
        print "Repository $prepare_repo is now ready.\n";
    }
    exit 0;
}

if ( $ARGV[0] ne "install" ) {
    die "ERROR: you try to execute an unsupported command $ARGV[0]";
} else {
    if (!defined $distro) {
        die "ERROR: You must specify which distro to use to manage packages";
    }

    my @pkgs;
    my $pos = 1;
    foreach my $p (1 .. $#ARGV ) {
        push (@pkgs, $ARGV[$p]);
        $pos++;
    }
    print "INFO: installing the following packages for $distro ";
    print "(in $root) " if defined $root;
    OSCAR::Utils::print_array (@pkgs);

    my $pm = PackMan::DEB->new;
    if (!defined $pm) {
        die "ERROR: Impossible to create a PackMan object";
    }
    if ($pm->distro($distro) == 0) {
        die "ERROR: Impossible to specify the distro of the PackMan object";
    }
    print $pm->status;
    if (defined $root) {
        if ($pm->chroot($root) == 0) {
            die "ERROR: Impossible to specify the root of the PackMan object";
        }
    }
    if ($pm->smart_install(@pkgs) == 0) {
        die "ERROR: Impossible to install ". join (", ", @pkgs);
    }
    exit 0;
}

sub help () {
    print "Help: Not yet implemented\n";
}

sub help_and_die {
    help ();
    exit 1;
}

sub help_and_exit {
    help ();
    exit 0;
}

help_and_die();

exit 1;


__END__

=head1 NAME

packman, a command line tool for the PackMan Perl module.

=head1 SYNOPSIS

packman OPTIONS

=head1 DESCRIPTION

???

=head1 SYNTAX

packman [--prepare-repo]

=head1 OPTIONS

Recognized options include:

=over 1

=item --prepare-repo

=item --help

Help information.

=back

=head1 Examples

=head2 Install the dpkg package into the image stored in /tmp/test
    sudo packman --root /tmp/test/ --distro ubuntu-7-i386 install dpkg

=head1 AUTHOR

Geoffroy Vallee, Oak Ridge National Laboratory <valleegr at ornl dot gov>

=head1 SEE ALSO

perl(1)

=cut
